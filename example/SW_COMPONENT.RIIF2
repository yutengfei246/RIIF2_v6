 template SW_COMPONENT;
     //all programs must define the name,size...

     abstract parameter NAME:string;
     abstract parameter SIZE:integer;
     abstract parameter LOOPS: integer;
     abstract parameter PROTECTION: enum {NONE, VAR_DUP};
     abstract parameter READ_ACCESS: integer;
     abstract parameter WRITE_ACCESS: integer;
     abstract platform execute_on;

     //List of possible SFB considered in our library
     abstract constant SFB_ITEMS : integer := 1000000;
     abstract constant SFB_LIST := { INT_TIME, UNDETECTABLE,
                     EARLY, LATE, FULL_UNRESPONSIVE, PARTIAL_UNRESPONSIVE,
                     RESPONSIVE, DATA_BENIGN, NO_DATA, EDC, NON_EDC };

     // Timing constraints depending on the workload
     abstract parameter TIMING_CONSTRAINTS : table;
     impose TIMING_CONSTRAINTS'HEADERS = {WORKLOAD,EXEC_TIME,MAX_TIME,AVG_TIME};

     abstract parameter SFB : table;
     impose SFB'HEADERs = {SFM_TYPE,SFM,OCCURING_SFB,OCCURRING_SFB_RATE};
     
 endtemplate

