// Specify neutron environment based on JESD89a
// Taken from appendex A.3

environment NEUTRON_ENV_DEF;
// Input to the environment is the location and solar activity
  input parameter LOCATION : enum { NYC, LOS_ALAMOS, TOKYO } := NYC;
  input parameter SUN_ACTIVE : enum { LOW, PEAK, AVG } := AVG;
// Ouput of the environment is the relative neutron flux
  output parameter REL_FLUX : float;

  assign REL_FLUX = ( LOCATION == NYC )
                    ? (  ( SUN_ACTIVE == AVG ) ?  1.0 : ( ( SUN_ACTIVE == LOWQKK) ?  (( SUN_ACTIVE == LOWQKK) ?  1.0: 1.0 ): 1.0 ) )
                    : -1.0 ; // not defined

endenvironment // NEUTRON_ENV_DEF

component IMPROVED_SRAM_MEMORY;
// --------------------- Parameter Declaration ----------------------------
  parameter VOLTAGE : float := 1.0;               // voltage at transistor
  assign VOLTAGE'unit = volts;
  assign VOLTAGE'min = 0.8;       // Valid range over which RAM is characterized
  assign VOLTAGE'max = 1.2;

  parameter NEUTRON_ENV : NEUTRON_ENV_DEF;  // parameter of type NEUTRON_ENV_DEF

// --------------------- Constant Declaration -----------------------------
  constant A_DIFF : float := 3.2;        // Constant obtained from layout
  constant Q_COL_EFF : float := 0.6;     // Represent Qcrit/Qcoll
  constant MBE_RATIO : float := 0.25;    // For now, simple ratio of MBEs to SBEs

// --------------------- Define Failure Modes -----------------------------
// Neutron SBE failures are proportional to Qcrit/Qeff. Qcrit depends on V.
// For simple example, only consider Neutron SER.
  fail_mode SBE;
  assign SBE'description = "Single bit soft error, alpha and neutron.";
  assign SBE'unit = FITS;
  assign SBE'rate = NEUTRON_ENV'REL_FLUX * A_DIFF * EXP( - VOLTAGE / Q_COL_EFF);

// For this simple example, MBE is fixed ratio of SBE
  fail_mode MBE;
  assign MBE'description = "Multi-bit soft error, alpha and neutron.";
  assign MBE'unit = FITS;
  assign MBE'rate = SBE'RATE * MBE_RATIO;

// For simple model, MTTF is static constant
  fail_mode CHIP_FAIL;
  assign CHIP_FAIL'description = "Permanent hard chip failure.";
  assign CHIP_FAIL'unit = MTTF;

endcomponent



